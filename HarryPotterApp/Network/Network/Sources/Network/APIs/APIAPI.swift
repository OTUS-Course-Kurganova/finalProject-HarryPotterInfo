//
// APIAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class APIAPI {

    /**
     All characters
     
     - returns: [Person]
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func charactersGet() async throws -> [Person] {
        return try await charactersGetWithRequestBuilder().execute().body
    }

    /**
     All characters
     - GET /characters
     - 
     - returns: RequestBuilder<[Person]> 
     */
    open class func charactersGetWithRequestBuilder() -> RequestBuilder<[Person]> {
        let localVariablePath = "/characters"
        let localVariableURLString = NetworkAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<[Person]>.Type = NetworkAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     characters in a certain house, e.g. /gryffindor
     
     - parameter house: (path) Name of a house 
     - returns: [Person]
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func charactersHouseHouseGet(house: String) async throws -> [Person] {
        return try await charactersHouseHouseGetWithRequestBuilder(house: house).execute().body
    }

    /**
     characters in a certain house, e.g. /gryffindor
     - GET /characters/house/{house}
     - 
     - parameter house: (path) Name of a house 
     - returns: RequestBuilder<[Person]> 
     */
    open class func charactersHouseHouseGetWithRequestBuilder(house: String) -> RequestBuilder<[Person]> {
        var localVariablePath = "/characters/house/{house}"
        let housePreEscape = "\(APIHelper.mapValueToPathItem(house))"
        let housePostEscape = housePreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{house}", with: housePostEscape, options: .literal, range: nil)
        let localVariableURLString = NetworkAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<[Person]>.Type = NetworkAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     Characters who are Hogwarts staff during the book series
     
     - returns: [Person]
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func charactersStaffGet() async throws -> [Person] {
        return try await charactersStaffGetWithRequestBuilder().execute().body
    }

    /**
     Characters who are Hogwarts staff during the book series
     - GET /characters/staff
     - 
     - returns: RequestBuilder<[Person]> 
     */
    open class func charactersStaffGetWithRequestBuilder() -> RequestBuilder<[Person]> {
        let localVariablePath = "/characters/staff"
        let localVariableURLString = NetworkAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<[Person]>.Type = NetworkAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     Characters who are Hogwarts students during the book series
     
     - returns: [Person]
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func charactersStudentsGet() async throws -> [Person] {
        return try await charactersStudentsGetWithRequestBuilder().execute().body
    }

    /**
     Characters who are Hogwarts students during the book series
     - GET /characters/students
     - 
     - returns: RequestBuilder<[Person]> 
     */
    open class func charactersStudentsGetWithRequestBuilder() -> RequestBuilder<[Person]> {
        let localVariablePath = "/characters/students"
        let localVariableURLString = NetworkAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<[Person]>.Type = NetworkAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     All spells
     
     - returns: [Spell]
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func spellsGet() async throws -> [Spell] {
        return try await spellsGetWithRequestBuilder().execute().body
    }

    /**
     All spells
     - GET /spells
     - 
     - returns: RequestBuilder<[Spell]> 
     */
    open class func spellsGetWithRequestBuilder() -> RequestBuilder<[Spell]> {
        let localVariablePath = "/spells"
        let localVariableURLString = NetworkAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<[Spell]>.Type = NetworkAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }
}
